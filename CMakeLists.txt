cmake_minimum_required(VERSION 3.16)
project(Sofie
    VERSION 1.0.1
    DESCRIPTION "SOFIE"
    LANGUAGES CXX)

find_package(BLAS)
if(NOT BLAS_FOUND)
  message(WARNING "BLAS not found: TMVA-SOFIE will not be fully tested")
endif()

message(STATUS "Looking for Protobuf")
set(protobuf_MODULE_COMPATIBLE TRUE)
find_package(Protobuf CONFIG)
if(NOT Protobuf_FOUND)
  find_package(Protobuf MODULE)
endif()
if(NOT Protobuf_FOUND)
  if(fail-on-missing)
    message(FATAL_ERROR "Protobuf libraries not found and they are required (tmva-sofie option enabled)")
  else()
    message(STATUS "Protobuf not found. Switching off tmva-sofie option")
    message(FATAL_ERROR "SOFIE cannot be installed without Protobuf")
  endif()
else()
  if(Protobuf_VERSION LESS 3.0)
    if(fail-on-missing)
      message(FATAL_ERROR "Protobuf libraries found but is less than the version required (3.0) (tmva-sofie option enabled)")
    else()
      message(STATUS "Protobuf found but its version is not high enough (>3.0). Switching off tmva-sofie option")
      message(FATAL_ERROR "SOFIE cannot be installed without Protobuf")
    endif()
  else()
    if(NOT TARGET protobuf::protoc)
      if(fail-on-missing)
        message(FATAL_ERROR "Protobuf compiler not found (tmva-sofie option enabled)")
      else()
        message(STATUS "Protobuf compiler not found. Switching off tmva-sofie option")
        message(FATAL_ERROR "SOFIE cannot be installed without Protobuf")
      endif()
    endif()
  endif()
endif()

find_package(ROOT REQUIRED COMPONENTS Core TMVA Tree)
include(${ROOT_USE_FILE})

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_INSTALL_BINDIR "bin" CACHE PATH "user executables (bin)")
set(CMAKE_INSTALL_INCLUDEDIR "include" CACHE PATH "header files")
set(CMAKE_INSTALL_LIBDIR "lib" CACHE PATH "libraries")

if(ccache)
  set(CMAKE_C_COMPILER_LAUNCHER ccache)
  set(CMAKE_CXX_COMPILER_LAUNCHER ccache)
endif()

if(testing)
  enable_testing()
endif()

add_subdirectory(src)
